{"version":3,"sources":["qrcodealg.js","index.js"],"names":["unicodeFormat8","code","getUTF8Bytes","string","utf8codes","i","length","utf8","charCodeAt","j","push","QRCodeAlg","data","errorCorrectLevel","typeNumber","modules","moduleCount","dataCache","rsBlocks","totalDataCount","utf8bytes","make","prototype","constructor","getModuleCount","getRightType","createData","createQrcode","makeImpl","maskPattern","Array","row","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","mapData","col","r","c","minLostPoint","pattern","bestModules","lostPoint","QRUtil","getLostPoint","pos","getPatternPosition","test","bits","getBCHTypeNumber","mod","Math","floor","QRErrorCorrectLevel","getBCHTypeInfo","buffer","QRBitBuffer","lengthBits","put","l","putBit","PAD0","PAD1","createBytes","offset","maxDcCount","maxEcCount","rsBlock","count","totalCount","dataCount","dcdata","ecdata","dcCount","ecCount","max","rsPoly","getErrorCorrectPolynomial","modPoly","QRPolynomial","getLength","modIndex","get","index","inc","bitIndex","byteIndex","dark","getMask","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","d","getBCHDigit","digit","Error","errorCorrectLength","a","multiply","QRMath","gexp","qrCode","darkCount","sameCount","head","current","abs","glog","n","LOG_TABLE","EXP_TABLE","num","shift","undefined","e","tl","el","ratio","RS_BLOCK_TABLE","lengthBytes","bufIndex","bit","module","exports","require","qrcodeAlgObjCache","options","getForeGround","config","pdground","foreground","createCanvas","qrCodeAlg","canvas","ctx","getContext","width","Number","_finalStyleCache","replace","height","tileW","toPrecision","tileH","w","ceil","h","fillStyle","background","fillRect","round","qrcode","opt","text","Object","assign","render","size","correctLevel","image","imageSize","console","log","obj"],"mappings":"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","file":"qrcode.js","sourceRoot":"../src","sourcesContent":["/**\n * 获取单个字符的utf8编码\n * unicode BMP平面约65535个字符\n * @param {num} code\n * return {array}\n */\nfunction unicodeFormat8(code){\n\t// 1 byte\n\tvar c0, c1, c2;\n\tif(code < 128){\n\t\treturn [code];\n\t// 2 bytes\n\t}else if(code < 2048){\n\t\tc0 = 192 + (code >> 6);\n\t\tc1 = 128 + (code & 63);\n\t\treturn [c0, c1];\n\t// 3 bytes\n\t}else{\n\t\tc0 = 224 + (code >> 12);\n\t\tc1 = 128 + (code >> 6 & 63);\n\t\tc2 = 128 + (code & 63);\n\t\treturn [c0, c1, c2];\n\t}\n}\n\n/**\n * 获取字符串的utf8编码字节串\n * @param {string} string\n * @return {array}\n */\nfunction getUTF8Bytes(string){\n\tvar utf8codes = [];\n\tfor(var i=0; i<string.length; i++){\n\t\tvar code = string.charCodeAt(i);\n\t\tvar utf8 = unicodeFormat8(code);\n\t\tfor(var j=0; j<utf8.length; j++){\n\t\t\tutf8codes.push(utf8[j]);\n\t\t}\n\t}\n\treturn utf8codes;\n}\n\n/**\n * 二维码算法实现\n * @param {string} data              要编码的信息字符串\n * @param {num} errorCorrectLevel 纠错等级\n */\nfunction QRCodeAlg(data, errorCorrectLevel) {\n\tthis.typeNumber = -1; //版本\n\tthis.errorCorrectLevel = errorCorrectLevel;\n\tthis.modules = null;  //二维矩阵，存放最终结果\n\tthis.moduleCount = 0; //矩阵大小\n\tthis.dataCache = null; //数据缓存\n\tthis.rsBlocks = null; //版本数据信息\n\tthis.totalDataCount = -1; //可使用的数据量\n\tthis.data = data;\n\tthis.utf8bytes = getUTF8Bytes(data);\n\tthis.make();\n}\n\nQRCodeAlg.prototype = {\n\tconstructor: QRCodeAlg,\n\t/**\n\t * 获取二维码矩阵大小\n\t * @return {num} 矩阵大小\n\t */\n\tgetModuleCount: function() {\n\t\treturn this.moduleCount;\n\t},\n\t/**\n\t * 编码\n\t */\n\tmake: function() {\n\t\tthis.getRightType();\n\t\tthis.dataCache = this.createData();\n\t\tthis.createQrcode();\n\t},\n\t/**\n\t * 设置二位矩阵功能图形\n\t * @param  {bool} test 表示是否在寻找最好掩膜阶段\n\t * @param  {num} maskPattern 掩膜的版本\n\t */\n\tmakeImpl: function(maskPattern) {\n\n\t\tthis.moduleCount = this.typeNumber * 4 + 17;\n\t\tthis.modules = new Array(this.moduleCount);\n\n\t\tfor (var row = 0; row < this.moduleCount; row++) {\n\n\t\t\tthis.modules[row] = new Array(this.moduleCount);\n\n\t\t}\n\t\tthis.setupPositionProbePattern(0, 0);\n\t\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\t\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\t\tthis.setupPositionAdjustPattern();\n\t\tthis.setupTimingPattern();\n\t\tthis.setupTypeInfo(true, maskPattern);\n\n\t\tif (this.typeNumber >= 7) {\n\t\t\tthis.setupTypeNumber(true);\n\t\t}\n\t\tthis.mapData(this.dataCache, maskPattern);\n\t},\n\t/**\n\t * 设置二维码的位置探测图形\n\t * @param  {num} row 探测图形的中心横坐标\n\t * @param  {num} col 探测图形的中心纵坐标\n\t */\n\tsetupPositionProbePattern: function(row, col) {\n\n\t\tfor (var r = -1; r <= 7; r++) {\n\n\t\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n\n\t\t\tfor (var c = -1; c <= 7; c++) {\n\n\t\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n\n\t\t\t\tif ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\n\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * 创建二维码\n\t * @return {[type]} [description]\n\t */\n\tcreateQrcode: function() {\n\n\t\tvar minLostPoint = 0;\n\t\tvar pattern = 0;\n\t\tvar bestModules = null;\n\n\t\tfor (var i = 0; i < 8; i++) {\n\n\t\t\tthis.makeImpl(i);\n\n\t\t\tvar lostPoint = QRUtil.getLostPoint(this);\n\t\t\tif (i == 0 || minLostPoint > lostPoint) {\n\t\t\t\tminLostPoint = lostPoint;\n\t\t\t\tpattern = i;\n\t\t\t\tbestModules = this.modules;\n\t\t\t}\n\t\t}\n\t\tthis.modules = bestModules;\n\t\tthis.setupTypeInfo(false, pattern);\n\n\t\tif (this.typeNumber >= 7) {\n\t\t\tthis.setupTypeNumber(false);\n\t\t}\n\n\t},\n\t/**\n\t * 设置定位图形\n\t * @return {[type]} [description]\n\t */\n\tsetupTimingPattern: function() {\n\n\t\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\t\tif (this.modules[r][6] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.modules[r][6] = (r % 2 == 0);\n\n\t\t\tif (this.modules[6][r] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.modules[6][r] = (r % 2 == 0);\n\t\t}\n\t},\n\t/**\n\t * 设置矫正图形\n\t * @return {[type]} [description]\n\t */\n\tsetupPositionAdjustPattern: function() {\n\n\t\tvar pos = QRUtil.getPatternPosition(this.typeNumber);\n\n\t\tfor (var i = 0; i < pos.length; i++) {\n\n\t\t\tfor (var j = 0; j < pos.length; j++) {\n\n\t\t\t\tvar row = pos[i];\n\t\t\t\tvar col = pos[j];\n\n\t\t\t\tif (this.modules[row][col] != null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var r = -2; r <= 2; r++) {\n\n\t\t\t\t\tfor (var c = -2; c <= 2; c++) {\n\n\t\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * 设置版本信息（7以上版本才有）\n\t * @param  {bool} test 是否处于判断最佳掩膜阶段\n\t * @return {[type]}      [description]\n\t */\n\tsetupTypeNumber: function(test) {\n\n\t\tvar bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n\n\t\tfor (var i = 0; i < 18; i++) {\n\t\t\tvar mod = (!test && ((bits >> i) & 1) == 1);\n\t\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t\t}\n\t},\n\t/**\n\t * 设置格式信息（纠错等级和掩膜版本）\n\t * @param  {bool} test\n\t * @param  {num} maskPattern 掩膜版本\n\t * @return {}\n\t */\n\tsetupTypeInfo: function(test, maskPattern) {\n\n\t\tvar data = (QRErrorCorrectLevel[this.errorCorrectLevel] << 3) | maskPattern;\n\t\tvar bits = QRUtil.getBCHTypeInfo(data);\n\n\t\t// vertical\n\t\tfor (var i = 0; i < 15; i++) {\n\n\t\t\tvar mod = (!test && ((bits >> i) & 1) == 1);\n\n\t\t\tif (i < 6) {\n\t\t\t\tthis.modules[i][8] = mod;\n\t\t\t} else if (i < 8) {\n\t\t\t\tthis.modules[i + 1][8] = mod;\n\t\t\t} else {\n\t\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\n\t\t\t}\n\n\t\t// horizontal\n\t\t\tvar mod = (!test && ((bits >> i) & 1) == 1);\n\n\t\t\tif (i < 8) {\n\t\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\n\t\t\t} else if (i < 9) {\n\t\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\n\t\t\t} else {\n\t\t\t\tthis.modules[8][15 - i - 1] = mod;\n\t\t\t}\n\t\t}\n\n\t\t// fixed module\n\t\tthis.modules[this.moduleCount - 8][8] = (!test);\n\n\t},\n\t/**\n\t * 数据编码\n\t * @return {[type]} [description]\n\t */\n\tcreateData: function() {\n\t\tvar buffer = new QRBitBuffer();\n\t\tvar lengthBits = this.typeNumber > 9 ? 16 : 8;\n\t\tbuffer.put(4, 4); //添加模式\n\t\tbuffer.put(this.utf8bytes.length, lengthBits);\n\t\tfor (var i = 0, l = this.utf8bytes.length; i < l; i++) {\n\t\t\tbuffer.put(this.utf8bytes[i], 8);\n\t\t}\n\t\tif (buffer.length + 4 <= this.totalDataCount * 8) {\n\t\t\tbuffer.put(0, 4);\n\t\t}\n\n\t\t// padding\n\t\twhile (buffer.length % 8 != 0) {\n\t\t\tbuffer.putBit(false);\n\t\t}\n\n\t\t// padding\n\t\twhile (true) {\n\n\t\t\tif (buffer.length >= this.totalDataCount * 8) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuffer.put(QRCodeAlg.PAD0, 8);\n\n\t\t\tif (buffer.length >= this.totalDataCount * 8) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuffer.put(QRCodeAlg.PAD1, 8);\n\t\t}\n\t\treturn this.createBytes(buffer);\n\t},\n\t/**\n\t * 纠错码编码\n\t * @param  {buffer} buffer 数据编码\n\t * @return {[type]}\n\t */\n\tcreateBytes: function(buffer) {\n\n\t\tvar offset = 0;\n\n\t\tvar maxDcCount = 0;\n\t\tvar maxEcCount = 0;\n\n\t\tvar length = this.rsBlock.length / 3;\n\n\t\tvar rsBlocks = new Array();\n\n\t\tfor (var i = 0; i < length; i++) {\n\n\t\t\tvar count = this.rsBlock[i * 3 + 0];\n\t\t\tvar totalCount = this.rsBlock[i * 3 + 1];\n\t\t\tvar dataCount = this.rsBlock[i * 3 + 2];\n\n\t\t\tfor (var j = 0; j < count; j++) {\n\t\t\t\trsBlocks.push([dataCount, totalCount]);\n\t\t\t}\n\t\t}\n\n\t\tvar dcdata = new Array(rsBlocks.length);\n\t\tvar ecdata = new Array(rsBlocks.length);\n\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\n\t\t\tvar dcCount = rsBlocks[r][0];\n\t\t\tvar ecCount = rsBlocks[r][1] - dcCount;\n\n\t\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n\n\t\t\tdcdata[r] = new Array(dcCount);\n\n\t\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t\t}\n\t\t\toffset += dcCount;\n\n\t\t\tvar rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n\t\t\tvar rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n\t\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\n\t\t\tfor (var i = 0; i < ecdata[r].length; i++) {\n\t\t\t\tvar modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t\t\t\tecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\n\t\t\t}\n\t\t}\n\n\t\tvar data = new Array(this.totalDataCount);\n\t\tvar index = 0;\n\n\t\tfor (var i = 0; i < maxDcCount; i++) {\n\t\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\t\tif (i < dcdata[r].length) {\n\t\t\t\t\tdata[index++] = dcdata[r][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < maxEcCount; i++) {\n\t\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\t\tif (i < ecdata[r].length) {\n\t\t\t\t\tdata[index++] = ecdata[r][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\n\t},\n\t/**\n\t * 布置模块，构建最终信息\n\t * @param  {} data\n\t * @param  {} maskPattern\n\t * @return {}\n\t */\n\tmapData: function(data, maskPattern) {\n\n\t\tvar inc = -1;\n\t\tvar row = this.moduleCount - 1;\n\t\tvar bitIndex = 7;\n\t\tvar byteIndex = 0;\n\n\t\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\n\t\t\tif (col == 6) col--;\n\n\t\t\twhile (true) {\n\n\t\t\t\tfor (var c = 0; c < 2; c++) {\n\n\t\t\t\t\tif (this.modules[row][col - c] == null) {\n\n\t\t\t\t\t\tvar dark = false;\n\n\t\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\t\tdark = (((data[byteIndex] >>> bitIndex) & 1) == 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar mask = QRUtil.getMask(maskPattern, row, col - c);\n\n\t\t\t\t\t\tif (mask) {\n\t\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\t\tbitIndex--;\n\n\t\t\t\t\t\tif (bitIndex == -1) {\n\t\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\trow += inc;\n\n\t\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\t\trow -= inc;\n\t\t\t\t\tinc = -inc;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n};\n/**\n * 填充字段\n */\nQRCodeAlg.PAD0 = 0xEC;\nQRCodeAlg.PAD1 = 0x11;\n\n\n//---------------------------------------------------------------------\n// 纠错等级对应的编码\n//---------------------------------------------------------------------\n\nvar QRErrorCorrectLevel = [1, 0, 3, 2];\n\n//---------------------------------------------------------------------\n// 掩膜版本\n//---------------------------------------------------------------------\n\nvar QRMaskPattern = {\n\tPATTERN000: 0,\n\tPATTERN001: 1,\n\tPATTERN010: 2,\n\tPATTERN011: 3,\n\tPATTERN100: 4,\n\tPATTERN101: 5,\n\tPATTERN110: 6,\n\tPATTERN111: 7\n};\n\n//---------------------------------------------------------------------\n// 工具类\n//---------------------------------------------------------------------\n\nvar QRUtil = {\n\n\t/*\n\t每个版本矫正图形的位置\n\t */\n\tPATTERN_POSITION_TABLE: [\n\t\t[],\n\t\t[6, 18],\n\t\t[6, 22],\n\t\t[6, 26],\n\t\t[6, 30],\n\t\t[6, 34],\n\t\t[6, 22, 38],\n\t\t[6, 24, 42],\n\t\t[6, 26, 46],\n\t\t[6, 28, 50],\n\t\t[6, 30, 54],\n\t\t[6, 32, 58],\n\t\t[6, 34, 62],\n\t\t[6, 26, 46, 66],\n\t\t[6, 26, 48, 70],\n\t\t[6, 26, 50, 74],\n\t\t[6, 30, 54, 78],\n\t\t[6, 30, 56, 82],\n\t\t[6, 30, 58, 86],\n\t\t[6, 34, 62, 90],\n\t\t[6, 28, 50, 72, 94],\n\t\t[6, 26, 50, 74, 98],\n\t\t[6, 30, 54, 78, 102],\n\t\t[6, 28, 54, 80, 106],\n\t\t[6, 32, 58, 84, 110],\n\t\t[6, 30, 58, 86, 114],\n\t\t[6, 34, 62, 90, 118],\n\t\t[6, 26, 50, 74, 98, 122],\n\t\t[6, 30, 54, 78, 102, 126],\n\t\t[6, 26, 52, 78, 104, 130],\n\t\t[6, 30, 56, 82, 108, 134],\n\t\t[6, 34, 60, 86, 112, 138],\n\t\t[6, 30, 58, 86, 114, 142],\n\t\t[6, 34, 62, 90, 118, 146],\n\t\t[6, 30, 54, 78, 102, 126, 150],\n\t\t[6, 24, 50, 76, 102, 128, 154],\n\t\t[6, 28, 54, 80, 106, 132, 158],\n\t\t[6, 32, 58, 84, 110, 136, 162],\n\t\t[6, 26, 54, 82, 110, 138, 166],\n\t\t[6, 30, 58, 86, 114, 142, 170]\n\t],\n\n\tG15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n\tG18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n\tG15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\n\n\t/*\n\tBCH编码格式信息\n\t */\n\tgetBCHTypeInfo: function(data) {\n\t\tvar d = data << 10;\n\t\twhile (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t\t\td ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15)));\n\t\t}\n\t\treturn ((data << 10) | d) ^ QRUtil.G15_MASK;\n\t},\n\t/*\n\tBCH编码版本信息\n\t */\n\tgetBCHTypeNumber: function(data) {\n\t\tvar d = data << 12;\n\t\twhile (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t\t\td ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18)));\n\t\t}\n\t\treturn (data << 12) | d;\n\t},\n\t/*\n\t获取BCH位信息\n\t */\n\tgetBCHDigit: function(data) {\n\n\t\tvar digit = 0;\n\n\t\twhile (data != 0) {\n\t\t\tdigit++;\n\t\t\tdata >>>= 1;\n\t\t}\n\n\t\treturn digit;\n\t},\n\t/*\n\t获取版本对应的矫正图形位置\n\t */\n\tgetPatternPosition: function(typeNumber) {\n\t\treturn QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n\t},\n\t/*\n\t掩膜算法\n\t */\n\tgetMask: function(maskPattern, i, j) {\n\n\t\tswitch (maskPattern) {\n\n\t\t\tcase QRMaskPattern.PATTERN000:\n\t\t\t\treturn (i + j) % 2 == 0;\n\t\t\tcase QRMaskPattern.PATTERN001:\n\t\t\t\treturn i % 2 == 0;\n\t\t\tcase QRMaskPattern.PATTERN010:\n\t\t\t\treturn j % 3 == 0;\n\t\t\tcase QRMaskPattern.PATTERN011:\n\t\t\t\treturn (i + j) % 3 == 0;\n\t\t\tcase QRMaskPattern.PATTERN100:\n\t\t\t\treturn (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n\t\t\tcase QRMaskPattern.PATTERN101:\n\t\t\t\treturn (i * j) % 2 + (i * j) % 3 == 0;\n\t\t\tcase QRMaskPattern.PATTERN110:\n\t\t\t\treturn ((i * j) % 2 + (i * j) % 3) % 2 == 0;\n\t\t\tcase QRMaskPattern.PATTERN111:\n\t\t\t\treturn ((i * j) % 3 + (i + j) % 2) % 2 == 0;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"bad maskPattern:\" + maskPattern);\n\t\t}\n\t},\n\t/*\n\t获取RS的纠错多项式\n\t */\n\tgetErrorCorrectPolynomial: function(errorCorrectLength) {\n\n\t\tvar a = new QRPolynomial([1], 0);\n\n\t\tfor (var i = 0; i < errorCorrectLength; i++) {\n\t\t\ta = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n\t\t}\n\n\t\treturn a;\n\t},\n\t/*\n\t获取评价\n\t */\n\tgetLostPoint: function(qrCode) {\n\n    var moduleCount = qrCode.getModuleCount(),\n        lostPoint = 0,\n        darkCount = 0;\n\n    for (var row = 0; row < moduleCount; row++) {\n\n      var sameCount = 0;\n      var head = qrCode.modules[row][0];\n\n      for (var col = 0; col < moduleCount; col++) {\n\n        var current = qrCode.modules[row][col];\n\n        //level 3 评价\n        if( col < moduleCount-6){\n          if (current && !qrCode.modules[row][ col + 1] && qrCode.modules[row][ col + 2] && qrCode.modules[row][ col + 3] && qrCode.modules[row][ col + 4] && !qrCode.modules[row][ col + 5] && qrCode.modules[row][ col + 6]) {\n          \tif(col < moduleCount-10){\n          \t\tif(qrCode.modules[row][ col + 7] &&qrCode.modules[row][ col + 8] &&qrCode.modules[row][ col + 9] &&qrCode.modules[row][ col + 10]){\n          \t\t\tlostPoint += 40;\n          \t\t}\n\t\t\t\t\t\t} else if(col > 3) {\n\t\t\t\t\t\t\tif(qrCode.modules[row][ col - 1] &&qrCode.modules[row][ col - 2] &&qrCode.modules[row][ col - 3] &&qrCode.modules[row][ col - 4]){\n          \t\t\tlostPoint += 40;\n          \t\t}\n\t\t\t\t\t\t}\n\n          }\n        }\n\n        //level 2 评价\n        if( (row < moduleCount-1)&&(col < moduleCount-1) ){\n          var count = 0;\n          if (current) count++;\n          if (qrCode.modules[row + 1][ col]) count++;\n          if (qrCode.modules[row][ col + 1]) count++;\n          if (qrCode.modules[row + 1][ col + 1]) count++;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n\n        //level 1 评价\n        if(head ^ current){\n          sameCount ++;\n        } else {\n          head = current;\n          if (sameCount >= 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n          sameCount = 1;\n        }\n\n        //level 4 评价\n        if (current) {\n          darkCount++;\n        }\n\n      }\n    }\n\n    for (var col = 0; col < moduleCount; col++) {\n\n      var sameCount = 0;\n      var head = qrCode.modules[0][col];\n\n      for (var row = 0; row < moduleCount; row++) {\n\n        var current = qrCode.modules[row][col];\n\n        //level 3 评价\n        if( row < moduleCount-6){\n          if (current && !qrCode.modules[row + 1][ col] && qrCode.modules[row + 2][ col] && qrCode.modules[row + 3][ col] && qrCode.modules[row + 4][ col] && !qrCode.modules[row + 5][ col] && qrCode.modules[row + 6][ col]) {\n            if(row < moduleCount-10){\n          \t\tif(qrCode.modules[row + 7][ col] && qrCode.modules[row + 8][ col]&& qrCode.modules[row + 9][ col]&& qrCode.modules[row + 10][ col]){\n          \t\t\tlostPoint += 40;\n          \t\t}\n\t\t\t\t\t\t} else if(row > 3) {\n\t\t\t\t\t\t\tif(qrCode.modules[row - 1][ col] && qrCode.modules[row - 2][ col]&& qrCode.modules[row - 3][ col]&& qrCode.modules[row - 4][ col]){\n          \t\t\tlostPoint += 40;\n          \t\t}\n\t\t\t\t\t\t}\n          }\n        }\n\n        //level 1 评价\n        if(head ^ current){\n          sameCount ++;\n        } else {\n          head = current;\n          if (sameCount >= 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n          sameCount = 1;\n        }\n\n      }\n    }\n\n    // LEVEL4\n\n    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n    lostPoint += ratio * 10;\n\n    return lostPoint;\n  }\n\n};\n\n\n//---------------------------------------------------------------------\n// QRMath使用的数学工具\n//---------------------------------------------------------------------\n\nvar QRMath = {\n\t/*\n\t将n转化为a^m\n\t */\n\tglog: function(n) {\n\n\t\tif (n < 1) {\n\t\t\tthrow new Error(\"glog(\" + n + \")\");\n\t\t}\n\n\t\treturn QRMath.LOG_TABLE[n];\n\t},\n\t/*\n\t将a^m转化为n\n\t */\n\tgexp: function(n) {\n\n\t\twhile (n < 0) {\n\t\t\tn += 255;\n\t\t}\n\n\t\twhile (n >= 256) {\n\t\t\tn -= 255;\n\t\t}\n\n\t\treturn QRMath.EXP_TABLE[n];\n\t},\n\n\tEXP_TABLE: new Array(256),\n\n\tLOG_TABLE: new Array(256)\n\n};\n\nfor (var i = 0; i < 8; i++) {\n\tQRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (var i = 8; i < 256; i++) {\n\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n}\nfor (var i = 0; i < 255; i++) {\n\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n}\n\n//---------------------------------------------------------------------\n// QRPolynomial 多项式\n//---------------------------------------------------------------------\n/**\n * 多项式类\n * @param {Array} num   系数\n * @param {num} shift a^shift\n */\nfunction QRPolynomial(num, shift) {\n\n\tif (num.length == undefined) {\n\t\tthrow new Error(num.length + \"/\" + shift);\n\t}\n\n\tvar offset = 0;\n\n\twhile (offset < num.length && num[offset] == 0) {\n\t\toffset++;\n\t}\n\n\tthis.num = new Array(num.length - offset + shift);\n\tfor (var i = 0; i < num.length - offset; i++) {\n\t\tthis.num[i] = num[i + offset];\n\t}\n}\n\nQRPolynomial.prototype = {\n\n\tget: function(index) {\n\t\treturn this.num[index];\n\t},\n\n\tgetLength: function() {\n\t\treturn this.num.length;\n\t},\n\t/**\n\t * 多项式乘法\n\t * @param  {QRPolynomial} e 被乘多项式\n\t * @return {[type]}   [description]\n\t */\n\tmultiply: function(e) {\n\n\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tfor (var j = 0; j < e.getLength(); j++) {\n\t\t\t\tnum[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n\t\t\t}\n\t\t}\n\n\t\treturn new QRPolynomial(num, 0);\n\t},\n\t/**\n\t * 多项式模运算\n\t * @param  {QRPolynomial} e 模多项式\n\t * @return {}\n\t */\n\tmod: function(e) {\n\t\tvar tl = this.getLength(),\n\t\t\tel = e.getLength();\n\t\tif (tl - el < 0) {\n\t\t\treturn this;\n\t\t}\n\t\tvar num = new Array(tl);\n\t\tfor (var i = 0; i < tl; i++) {\n\t\t\tnum[i] = this.get(i);\n\t\t}\n\t\twhile (num.length >= el) {\n\t\t\tvar ratio = QRMath.glog(num[0]) - QRMath.glog(e.get(0));\n\n\t\t\tfor (var i = 0; i < e.getLength(); i++) {\n\t\t\t\tnum[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n\t\t\t}\n\t\t\twhile (num[0] == 0) {\n\t\t\t\tnum.shift();\n\t\t\t}\n\t\t}\n\t\treturn new QRPolynomial(num, 0);\n\t}\n};\n\n//---------------------------------------------------------------------\n// RS_BLOCK_TABLE\n//---------------------------------------------------------------------\n/*\n二维码各个版本信息[块数, 每块中的数据块数, 每块中的信息块数]\n */\nvar RS_BLOCK_TABLE = [\n\n// L\n// M\n// Q\n// H\n\n// 1\n[1, 26, 19],\n\t[1, 26, 16],\n\t[1, 26, 13],\n\t[1, 26, 9],\n\n\t// 2\n\t[1, 44, 34],\n\t[1, 44, 28],\n\t[1, 44, 22],\n\t[1, 44, 16],\n\n\t// 3\n\t[1, 70, 55],\n\t[1, 70, 44],\n\t[2, 35, 17],\n\t[2, 35, 13],\n\n\t// 4\n\t[1, 100, 80],\n\t[2, 50, 32],\n\t[2, 50, 24],\n\t[4, 25, 9],\n\n\t// 5\n\t[1, 134, 108],\n\t[2, 67, 43],\n\t[2, 33, 15, 2, 34, 16],\n\t[2, 33, 11, 2, 34, 12],\n\n\t// 6\n\t[2, 86, 68],\n\t[4, 43, 27],\n\t[4, 43, 19],\n\t[4, 43, 15],\n\n\t// 7\n\t[2, 98, 78],\n\t[4, 49, 31],\n\t[2, 32, 14, 4, 33, 15],\n\t[4, 39, 13, 1, 40, 14],\n\n\t// 8\n\t[2, 121, 97],\n\t[2, 60, 38, 2, 61, 39],\n\t[4, 40, 18, 2, 41, 19],\n\t[4, 40, 14, 2, 41, 15],\n\n\t// 9\n\t[2, 146, 116],\n\t[3, 58, 36, 2, 59, 37],\n\t[4, 36, 16, 4, 37, 17],\n\t[4, 36, 12, 4, 37, 13],\n\n\t// 10\n\t[2, 86, 68, 2, 87, 69],\n\t[4, 69, 43, 1, 70, 44],\n\t[6, 43, 19, 2, 44, 20],\n\t[6, 43, 15, 2, 44, 16],\n\n\t// 11\n\t[4, 101, 81],\n\t[1, 80, 50, 4, 81, 51],\n\t[4, 50, 22, 4, 51, 23],\n\t[3, 36, 12, 8, 37, 13],\n\n\t// 12\n\t[2, 116, 92, 2, 117, 93],\n\t[6, 58, 36, 2, 59, 37],\n\t[4, 46, 20, 6, 47, 21],\n\t[7, 42, 14, 4, 43, 15],\n\n\t// 13\n\t[4, 133, 107],\n\t[8, 59, 37, 1, 60, 38],\n\t[8, 44, 20, 4, 45, 21],\n\t[12, 33, 11, 4, 34, 12],\n\n\t// 14\n\t[3, 145, 115, 1, 146, 116],\n\t[4, 64, 40, 5, 65, 41],\n\t[11, 36, 16, 5, 37, 17],\n\t[11, 36, 12, 5, 37, 13],\n\n\t// 15\n\t[5, 109, 87, 1, 110, 88],\n\t[5, 65, 41, 5, 66, 42],\n\t[5, 54, 24, 7, 55, 25],\n\t[11, 36, 12],\n\n\t// 16\n\t[5, 122, 98, 1, 123, 99],\n\t[7, 73, 45, 3, 74, 46],\n\t[15, 43, 19, 2, 44, 20],\n\t[3, 45, 15, 13, 46, 16],\n\n\t// 17\n\t[1, 135, 107, 5, 136, 108],\n\t[10, 74, 46, 1, 75, 47],\n\t[1, 50, 22, 15, 51, 23],\n\t[2, 42, 14, 17, 43, 15],\n\n\t// 18\n\t[5, 150, 120, 1, 151, 121],\n\t[9, 69, 43, 4, 70, 44],\n\t[17, 50, 22, 1, 51, 23],\n\t[2, 42, 14, 19, 43, 15],\n\n\t// 19\n\t[3, 141, 113, 4, 142, 114],\n\t[3, 70, 44, 11, 71, 45],\n\t[17, 47, 21, 4, 48, 22],\n\t[9, 39, 13, 16, 40, 14],\n\n\t// 20\n\t[3, 135, 107, 5, 136, 108],\n\t[3, 67, 41, 13, 68, 42],\n\t[15, 54, 24, 5, 55, 25],\n\t[15, 43, 15, 10, 44, 16],\n\n\t// 21\n\t[4, 144, 116, 4, 145, 117],\n\t[17, 68, 42],\n\t[17, 50, 22, 6, 51, 23],\n\t[19, 46, 16, 6, 47, 17],\n\n\t// 22\n\t[2, 139, 111, 7, 140, 112],\n\t[17, 74, 46],\n\t[7, 54, 24, 16, 55, 25],\n\t[34, 37, 13],\n\n\t// 23\n\t[4, 151, 121, 5, 152, 122],\n\t[4, 75, 47, 14, 76, 48],\n\t[11, 54, 24, 14, 55, 25],\n\t[16, 45, 15, 14, 46, 16],\n\n\t// 24\n\t[6, 147, 117, 4, 148, 118],\n\t[6, 73, 45, 14, 74, 46],\n\t[11, 54, 24, 16, 55, 25],\n\t[30, 46, 16, 2, 47, 17],\n\n\t// 25\n\t[8, 132, 106, 4, 133, 107],\n\t[8, 75, 47, 13, 76, 48],\n\t[7, 54, 24, 22, 55, 25],\n\t[22, 45, 15, 13, 46, 16],\n\n\t// 26\n\t[10, 142, 114, 2, 143, 115],\n\t[19, 74, 46, 4, 75, 47],\n\t[28, 50, 22, 6, 51, 23],\n\t[33, 46, 16, 4, 47, 17],\n\n\t// 27\n\t[8, 152, 122, 4, 153, 123],\n\t[22, 73, 45, 3, 74, 46],\n\t[8, 53, 23, 26, 54, 24],\n\t[12, 45, 15, 28, 46, 16],\n\n\t// 28\n\t[3, 147, 117, 10, 148, 118],\n\t[3, 73, 45, 23, 74, 46],\n\t[4, 54, 24, 31, 55, 25],\n\t[11, 45, 15, 31, 46, 16],\n\n\t// 29\n\t[7, 146, 116, 7, 147, 117],\n\t[21, 73, 45, 7, 74, 46],\n\t[1, 53, 23, 37, 54, 24],\n\t[19, 45, 15, 26, 46, 16],\n\n\t// 30\n\t[5, 145, 115, 10, 146, 116],\n\t[19, 75, 47, 10, 76, 48],\n\t[15, 54, 24, 25, 55, 25],\n\t[23, 45, 15, 25, 46, 16],\n\n\t// 31\n\t[13, 145, 115, 3, 146, 116],\n\t[2, 74, 46, 29, 75, 47],\n\t[42, 54, 24, 1, 55, 25],\n\t[23, 45, 15, 28, 46, 16],\n\n\t// 32\n\t[17, 145, 115],\n\t[10, 74, 46, 23, 75, 47],\n\t[10, 54, 24, 35, 55, 25],\n\t[19, 45, 15, 35, 46, 16],\n\n\t// 33\n\t[17, 145, 115, 1, 146, 116],\n\t[14, 74, 46, 21, 75, 47],\n\t[29, 54, 24, 19, 55, 25],\n\t[11, 45, 15, 46, 46, 16],\n\n\t// 34\n\t[13, 145, 115, 6, 146, 116],\n\t[14, 74, 46, 23, 75, 47],\n\t[44, 54, 24, 7, 55, 25],\n\t[59, 46, 16, 1, 47, 17],\n\n\t// 35\n\t[12, 151, 121, 7, 152, 122],\n\t[12, 75, 47, 26, 76, 48],\n\t[39, 54, 24, 14, 55, 25],\n\t[22, 45, 15, 41, 46, 16],\n\n\t// 36\n\t[6, 151, 121, 14, 152, 122],\n\t[6, 75, 47, 34, 76, 48],\n\t[46, 54, 24, 10, 55, 25],\n\t[2, 45, 15, 64, 46, 16],\n\n\t// 37\n\t[17, 152, 122, 4, 153, 123],\n\t[29, 74, 46, 14, 75, 47],\n\t[49, 54, 24, 10, 55, 25],\n\t[24, 45, 15, 46, 46, 16],\n\n\t// 38\n\t[4, 152, 122, 18, 153, 123],\n\t[13, 74, 46, 32, 75, 47],\n\t[48, 54, 24, 14, 55, 25],\n\t[42, 45, 15, 32, 46, 16],\n\n\t// 39\n\t[20, 147, 117, 4, 148, 118],\n\t[40, 75, 47, 7, 76, 48],\n\t[43, 54, 24, 22, 55, 25],\n\t[10, 45, 15, 67, 46, 16],\n\n\t// 40\n\t[19, 148, 118, 6, 149, 119],\n\t[18, 75, 47, 31, 76, 48],\n\t[34, 54, 24, 34, 55, 25],\n\t[20, 45, 15, 61, 46, 16]\n];\n\n/**\n * 根据数据获取对应版本\n * @return {[type]} [description]\n */\nQRCodeAlg.prototype.getRightType = function() {\n\tfor (var typeNumber = 1; typeNumber < 41; typeNumber++) {\n\t\tvar rsBlock = RS_BLOCK_TABLE[(typeNumber - 1) * 4 + this.errorCorrectLevel];\n\t\tif (rsBlock == undefined) {\n\t\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + this.errorCorrectLevel);\n\t\t}\n\t\tvar length = rsBlock.length / 3;\n\t\tvar totalDataCount = 0;\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar count = rsBlock[i * 3 + 0];\n\t\t\tvar dataCount = rsBlock[i * 3 + 2];\n\t\t\ttotalDataCount += dataCount * count;\n\t\t}\n\n\t\tvar lengthBytes = typeNumber > 9 ? 2 : 1;\n\t\tif (this.utf8bytes.length + lengthBytes < totalDataCount || typeNumber == 40) {\n\t\t\tthis.typeNumber = typeNumber;\n\t\t\tthis.rsBlock = rsBlock;\n\t\t\tthis.totalDataCount = totalDataCount;\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\n//---------------------------------------------------------------------\n// QRBitBuffer\n//---------------------------------------------------------------------\n\nfunction QRBitBuffer() {\n\tthis.buffer = new Array();\n\tthis.length = 0;\n}\n\nQRBitBuffer.prototype = {\n\n\tget: function(index) {\n\t\tvar bufIndex = Math.floor(index / 8);\n\t\treturn ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1);\n\t},\n\n\tput: function(num, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tthis.putBit(((num >>> (length - i - 1)) & 1));\n\t\t}\n\t},\n\n\tputBit: function(bit) {\n\n\t\tvar bufIndex = Math.floor(this.length / 8);\n\t\tif (this.buffer.length <= bufIndex) {\n\t\t\tthis.buffer.push(0);\n\t\t}\n\n\t\tif (bit) {\n\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\n\t\t}\n\n\t\tthis.length++;\n\t}\n};\nmodule.exports = QRCodeAlg;\n","const QRCodeAlg = require('./qrcodealg');\nconst qrcodeAlgObjCache = [];\nlet options = {}; \n\nfunction getForeGround (config){\n  var options = config.options;\n  if( options.pdground && (\n      (config.row > 1 && config.row < 5 && config.col >1 && config.col<5)\n      || (config.row > (config.count - 6) && config.row < (config.count - 2) && config.col >1 && config.col<5)\n      || (config.row > 1 && config.row < 5 && config.col > (config.count - 6) && config.col < (config.count - 2))\n  )){\n      return options.pdground;\n  }\n  return options.foreground;\n}\n\n\nfunction createCanvas(qrCodeAlg, canvas) {\n  let ctx = canvas.getContext('2d');\n  let count = qrCodeAlg.getModuleCount();\n  //计算每个点的长宽\n  let width = options.width || Number(canvas._finalStyleCache.width.replace('px',''))\n  let height = options.height || Number(canvas._finalStyleCache.height.replace('px',''))\n  let tileW = (width / count).toPrecision(4);\n  let tileH = (height / count).toPrecision(4);\n\n  for (let row = 0; row < count; row++) {\n    for (let col = 0; col < count; col++) {\n      let w = (Math.ceil((col + 1) * tileW) - Math.floor(col * tileW));\n      let h = (Math.ceil((row + 1) * tileW) - Math.floor(row * tileW));\n\n      let foreground = getForeGround({\n        row: row,\n        col: col,\n        count: count,\n        options: options\n      });\n      ctx.fillStyle = qrCodeAlg.modules[row][col] ? foreground : options.background;\n      // ctx.fillStyle = '#000';\n      ctx.fillRect(Math.round(col * tileW), Math.round(row * tileH), w, h);\n    }\n  }\n\n}\n\n\nexport default function qrcode(\n  opt,\n  canvas // canvas 对象，必填\n) {\n  if (!canvas) return;\n\n  if (typeof opt === 'string') {\n    opt = {\n      text: opt\n    };\n  }\n\n  Object.assign(options, {\n    text: '',\n    render: '',\n    size: 256,\n    correctLevel: 3,\n    background: '#ffffff',\n    foreground: '#000000',\n    width: null,\n    height: null,\n    image: '',\n    imageSize: 30\n  }, opt)\n\n  console.log(options)\n\n  let qrCodeAlg = null;\n\n  for (var i = 0, l = qrcodeAlgObjCache.length; i < l; i++) {\n    if (qrcodeAlgObjCache[i].text == options.text && qrcodeAlgObjCache[i].text.correctLevel == options.correctLevel) {\n      qrCodeAlg = qrcodeAlgObjCache[i].obj;\n      break;\n    }\n  }\n  if (i == l) {\n    qrCodeAlg = new QRCodeAlg(options.text, options.correctLevel);\n    qrcodeAlgObjCache.push({ text: options.text, correctLevel: options.correctLevel, obj: qrCodeAlg });\n  }\n\n  return createCanvas(qrCodeAlg, canvas);\n}"]}